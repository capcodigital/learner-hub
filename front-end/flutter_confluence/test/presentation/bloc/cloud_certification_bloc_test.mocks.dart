// Mocks generated by Mockito 5.0.10 from annotations
// in flutter_confluence/test/presentation/bloc/cloud_certification_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:flutter_confluence/core/error/failures.dart' as _i6;
import 'package:flutter_confluence/core/usecases/usecase.dart' as _i8;
import 'package:flutter_confluence/domain/entities/cloud_certification.dart'
    as _i7;
import 'package:flutter_confluence/domain/repositories/cloud_certification_repository.dart'
    as _i2;
import 'package:flutter_confluence/domain/usecases/get_completed_certifications.dart'
    as _i4;
import 'package:flutter_confluence/domain/usecases/get_in_progress_certifications.dart'
    as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeCloudCertificationRepository extends _i1.Fake
    implements _i2.CloudCertificationRepository {}

class _FakeEither<L, R> extends _i1.Fake implements _i3.Either<L, R> {
  @override
  String toString() => super.toString();
}

/// A class which mocks [GetCompletedCertification].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCompletedCertification extends _i1.Mock
    implements _i4.GetCompletedCertifications {
  MockGetCompletedCertification() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CloudCertificationRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue: _FakeCloudCertificationRepository())
          as _i2.CloudCertificationRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.CloudCertification>>> execute(
          _i8.NoParams? noParams) =>
      (super.noSuchMethod(Invocation.method(#execute, [noParams]),
          returnValue: Future<
                  _i3.Either<_i6.Failure, List<_i7.CloudCertification>>>.value(
              _FakeEither<_i6.Failure, List<_i7.CloudCertification>>())) as _i5
          .Future<_i3.Either<_i6.Failure, List<_i7.CloudCertification>>>);
}

/// A class which mocks [GetInProgressCertification].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetInProgressCertification extends _i1.Mock
    implements _i9.GetInProgressCertifications {
  MockGetInProgressCertification() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CloudCertificationRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue: _FakeCloudCertificationRepository())
          as _i2.CloudCertificationRepository);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i7.CloudCertification>>> execute(
          _i8.NoParams? noParams) =>
      (super.noSuchMethod(Invocation.method(#execute, [noParams]),
          returnValue: Future<
                  _i3.Either<_i6.Failure, List<_i7.CloudCertification>>>.value(
              _FakeEither<_i6.Failure, List<_i7.CloudCertification>>())) as _i5
          .Future<_i3.Either<_i6.Failure, List<_i7.CloudCertification>>>);
}
