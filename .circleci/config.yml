version: 2

jobs:
  infra:
    docker:
      - image: "hashicorp/terraform:1.0.0"
    steps:
      - checkout
      - run:
          name: add gcp key
          command: echo $GOOGLE_CREDENTIALS > $GOOGLE_APPLICATION_CREDENTIALS
      - run:
          name: terraform init
          command: terraform -chdir="ops/storage" init -backend-config="bucket=${GOOGLE_BACKEND_BUCKET}"
      - run:
          name: terraform validate
          command: terraform -chdir="ops/storage" validate
      - run:
          name: terraform plan
          command: terraform -chdir="ops/storage" plan -var="project_name=${GOOGLE_PROJECT}" -out="plan.out"
      - run:
          name: terraform apply
          command: terraform -chdir="ops/storage" apply -lock=true -refresh=true -auto-approve "plan.out"

  tests:
    docker:
      - image: "cirrusci/flutter:2.2.3"
    steps:
      - checkout
      - run:
          name: check flutter requirements
          command: flutter doctor -v
      - run:
          name: run tests
          command: flutter test
          working_directory: ~/project/front-end/flutter_confluence

  build:
    docker:
      - image: "cirrusci/flutter:2.2.3"
    steps:
      - checkout
      - run:
          name: check flutter requirements
          command: flutter doctor -v
      - run:
          name: Create workspace folder
          command: mkdir -p ~/tmp/workspace
      - run:
          name: build android app
          command: flutter -v build apk
          working_directory: ~/project/front-end/flutter_confluence
      - run:
          name: copy
          command: |
            mkdir -p ~/tmp/workspace/android
            cp build/app/outputs/apk/release/*.apk ~/tmp/workspace/android
          working_directory: ~/project/front-end/flutter_confluence
      - persist_to_workspace:
          root: ~/tmp/workspace
          paths:
            - android
      - run:
          name: build web app
          command: flutter -v build web
          working_directory: ~/project/front-end/flutter_confluence
      - run:
          name: copy
          command: cp -r build/web ~/tmp/workspace
          working_directory: ~/project/front-end/flutter_confluence
      - persist_to_workspace:
          root: ~/tmp/workspace
          paths:
            - web
      - run:
          name: Create .env file
          command: |
            echo "API_TOKEN='${CONFLUENCE_API_TOKEN}'" >> .env
            echo "USERNAME='${CONFLUENCE_USERNAME}'" >> .env
          working_directory: ~/project/back-end
      - run:
          name: copy backend
          command: cp -r back-end ~/tmp/workspace/backend
          working_directory: ~/project
      - persist_to_workspace:
          root: ~/tmp/workspace
          paths:
            - backend

  upload:
    docker:
      - image: "google/cloud-sdk:345.0.0-slim"
    steps:
      - attach_workspace:
          at: ~/tmp/workspace
      - checkout
      - run:
          name: add gcp key
          command: echo $GOOGLE_CREDENTIALS > $GOOGLE_APPLICATION_CREDENTIALS
      - run:
          name: authenticate gcloud
          command: gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS
      - run:
          name: set the gcp project
          command: gcloud config set project ${GOOGLE_PROJECT}
      - run:
          name: upload android app to gcs
          command: gsutil cp ~/tmp/workspace/android/app-release.apk gs://${GOOGLE_PROJECT}-build
      - run:
          name: upload web app to gcs
          command: gsutil cp -r ~/tmp/workspace/web gs://${GOOGLE_PROJECT}-build
      - run:
          name: upload backend to gcs
          command: gsutil cp -r ~/tmp/workspace/backend gs://${GOOGLE_PROJECT}-build
      - run:
          name: upload backend server
          command: gcloud app deploy
          working_directory: ~/tmp/workspace/backend

  deploy:
    docker:
      - image: "cirrusci/flutter:2.2.3"
    steps:
      - checkout
      - run:
          name: Build web app
          command: flutter build web
          working_directory: ~/project/front-end/flutter_confluence
      - run:
          name: Install Firebase Tools
          command: curl -sL firebase.tools | bash
      - run:
          name: Deploy website to Firebase
          command: firebase deploy --only hosting --token $FIREBASE_TOKEN
          working_directory: ~/project/front-end/flutter_confluence
      - run:
          name: Deploy Firebase functions
          command: firebase deploy --only functions --token $FIREBASE_TOKEN
          working_directory: ~/project/functions

workflows:
  version: 2
  commit:
    jobs:
      - tests
      - build:
          requires:
            - tests
          filters:
            branches:
              only:
                - main
      - infra:
          requires:
            - tests
          filters:
              branches:
                only:
                  - main
      - upload:
          requires:
            - build
            - infra
          filters:
            branches:
              only:
                - main
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - main